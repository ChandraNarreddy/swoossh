{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Resources": {
    "CAStore": {
      "Type": "AWS::DynamoDB::Table",
      "Properties": {
        "KeySchema": [
          {
            "AttributeName": "pk",
            "KeyType": "HASH"
          },
          {
            "AttributeName": "sk",
            "KeyType": "RANGE"
          }
        ],
        "AttributeDefinitions": [
          {
            "AttributeName": "pk",
            "AttributeType": "S"
          },
          {
            "AttributeName": "sk",
            "AttributeType": "S"
          },
          {
            "AttributeName": "posix_id",
            "AttributeType": "S"
          },
          {
            "AttributeName": "type",
            "AttributeType": "S"
          },
          {
            "AttributeName": "uuid",
            "AttributeType": "S"
          },
          {
            "AttributeName": "secondary_group",
            "AttributeType": "S"
          },
          {
            "AttributeName": "name",
            "AttributeType": "S"
          },
          {
            "AttributeName": "email",
            "AttributeType": "S"
          }
        ],
        "GlobalSecondaryIndexes": [
          {
            "IndexName": "gsi_posix_id",
            "KeySchema": [
              {
                "AttributeName": "posix_id",
                "KeyType": "HASH"
              },
              {
                "AttributeName": "type",
                "KeyType": "RANGE"
              }
            ],
            "Projection": {
              "ProjectionType": "ALL"
            },
            "ProvisionedThroughput": {
              "ReadCapacityUnits": 1,
              "WriteCapacityUnits": 1
            }
          },
          {
            "IndexName": "gsi_uuid",
            "KeySchema": [
              {
                "AttributeName": "uuid",
                "KeyType": "HASH"
              }
            ],
            "Projection": {
              "ProjectionType": "ALL"
            },
            "ProvisionedThroughput": {
              "ReadCapacityUnits": 1,
              "WriteCapacityUnits": 1
            }
          },
          {
            "IndexName": "gsi_secondary_group",
            "KeySchema": [
              {
                "AttributeName": "secondary_group",
                "KeyType": "HASH"
              },
              {
                "AttributeName": "pk",
                "KeyType": "RANGE"
              }
            ],
            "Projection": {
              "ProjectionType": "ALL"
            },
            "ProvisionedThroughput": {
              "ReadCapacityUnits": 1,
              "WriteCapacityUnits": 1
            }
          },
          {
            "IndexName": "gsi_name",
            "KeySchema": [
              {
                "AttributeName": "name",
                "KeyType": "HASH"
              },
              {
                "AttributeName": "type",
                "KeyType": "RANGE"
              }
            ],
            "Projection": {
              "ProjectionType": "ALL"
            },
            "ProvisionedThroughput": {
              "ReadCapacityUnits": 1,
              "WriteCapacityUnits": 1
            }
          },
          {
            "IndexName": "gsi_email",
            "KeySchema": [
              {
                "AttributeName": "email",
                "KeyType": "HASH"
              }
            ],
            "Projection": {
              "ProjectionType": "ALL"
            },
            "ProvisionedThroughput": {
              "ReadCapacityUnits": 1,
              "WriteCapacityUnits": 1
            }
          },
          {
            "IndexName": "gsi_type",
            "KeySchema": [
              {
                "AttributeName": "type",
                "KeyType": "HASH"
              },
              {
                "AttributeName": "pk",
                "KeyType": "RANGE"
              }
            ],
            "Projection": {
              "ProjectionType": "ALL"
            },
            "ProvisionedThroughput": {
              "ReadCapacityUnits": 1,
              "WriteCapacityUnits": 1
            }
          }
        ],
        "BillingMode": "PROVISIONED",
        "TableName": "CAStore",
        "ProvisionedThroughput": {
          "ReadCapacityUnits": 1,
          "WriteCapacityUnits": 1
        }
      }
    },
    "TableCAStoreReadCapacityScalableTarget": {
      "Type": "AWS::ApplicationAutoScaling::ScalableTarget",
      "DependsOn": "CAStore",
      "Properties": {
        "ServiceNamespace": "dynamodb",
        "ResourceId": "table/CAStore",
        "ScalableDimension": "dynamodb:table:ReadCapacityUnits",
        "MinCapacity": 1,
        "MaxCapacity": 10,
        "RoleARN": {
          "Fn::Sub": "arn:aws:iam::${AWS::AccountId}:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable"
        }
      }
    },
    "TableCAStoreReadCapacityScalingPolicy": {
      "Type": "AWS::ApplicationAutoScaling::ScalingPolicy",
      "DependsOn": "TableCAStoreReadCapacityScalableTarget",
      "Properties": {
        "ServiceNamespace": "dynamodb",
        "ResourceId": "table/CAStore",
        "ScalableDimension": "dynamodb:table:ReadCapacityUnits",
        "PolicyName": "CAStore-read-capacity-scaling-policy",
        "PolicyType": "TargetTrackingScaling",
        "TargetTrackingScalingPolicyConfiguration": {
          "PredefinedMetricSpecification": {
            "PredefinedMetricType": "DynamoDBReadCapacityUtilization"
          },
          "ScaleOutCooldown": 60,
          "ScaleInCooldown": 60,
          "TargetValue": 70
        }
      }
    },
    "TableCAStoreWriteCapacityScalableTarget": {
      "Type": "AWS::ApplicationAutoScaling::ScalableTarget",
      "DependsOn": "CAStore",
      "Properties": {
        "ServiceNamespace": "dynamodb",
        "ResourceId": "table/CAStore",
        "ScalableDimension": "dynamodb:table:WriteCapacityUnits",
        "MinCapacity": 1,
        "MaxCapacity": 10,
        "RoleARN": {
          "Fn::Sub": "arn:aws:iam::${AWS::AccountId}:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable"
        }
      }
    },
    "TableCAStoreWriteCapacityScalingPolicy": {
      "Type": "AWS::ApplicationAutoScaling::ScalingPolicy",
      "DependsOn": "TableCAStoreWriteCapacityScalableTarget",
      "Properties": {
        "ServiceNamespace": "dynamodb",
        "ResourceId": "table/CAStore",
        "ScalableDimension": "dynamodb:table:WriteCapacityUnits",
        "PolicyName": "CAStore-write-capacity-scaling-policy",
        "PolicyType": "TargetTrackingScaling",
        "TargetTrackingScalingPolicyConfiguration": {
          "PredefinedMetricSpecification": {
            "PredefinedMetricType": "DynamoDBWriteCapacityUtilization"
          },
          "ScaleOutCooldown": 60,
          "ScaleInCooldown": 60,
          "TargetValue": 70
        }
      }
    },
    "TableCAStoreIndexgsi_posix_idReadCapacityScalableTarget": {
      "Type": "AWS::ApplicationAutoScaling::ScalableTarget",
      "DependsOn": "CAStore",
      "Properties": {
        "ServiceNamespace": "dynamodb",
        "ResourceId": "table/CAStore/index/gsi_posix_id",
        "ScalableDimension": "dynamodb:index:ReadCapacityUnits",
        "MinCapacity": 1,
        "MaxCapacity": 10,
        "RoleARN": {
          "Fn::Sub": "arn:aws:iam::${AWS::AccountId}:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable"
        }
      }
    },
    "TableCAStoreIndexgsi_posix_idReadCapacityScalingPolicy": {
      "Type": "AWS::ApplicationAutoScaling::ScalingPolicy",
      "DependsOn": "TableCAStoreIndexgsi_posix_idReadCapacityScalableTarget",
      "Properties": {
        "ServiceNamespace": "dynamodb",
        "ResourceId": "table/CAStore/index/gsi_posix_id",
        "ScalableDimension": "dynamodb:index:ReadCapacityUnits",
        "PolicyName": "CAStore-index-gsi_posix_id-read-capacity-scaling-policy",
        "PolicyType": "TargetTrackingScaling",
        "TargetTrackingScalingPolicyConfiguration": {
          "PredefinedMetricSpecification": {
            "PredefinedMetricType": "DynamoDBReadCapacityUtilization"
          },
          "ScaleOutCooldown": 60,
          "ScaleInCooldown": 60,
          "TargetValue": 70
        }
      }
    },
    "TableCAStoreIndexgsi_posix_idWriteCapacityScalableTarget": {
      "Type": "AWS::ApplicationAutoScaling::ScalableTarget",
      "DependsOn": "CAStore",
      "Properties": {
        "ServiceNamespace": "dynamodb",
        "ResourceId": "table/CAStore/index/gsi_posix_id",
        "ScalableDimension": "dynamodb:index:WriteCapacityUnits",
        "MinCapacity": 1,
        "MaxCapacity": 10,
        "RoleARN": {
          "Fn::Sub": "arn:aws:iam::${AWS::AccountId}:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable"
        }
      }
    },
    "TableCAStoreIndexgsi_posix_idWriteCapacityScalingPolicy": {
      "Type": "AWS::ApplicationAutoScaling::ScalingPolicy",
      "DependsOn": "TableCAStoreIndexgsi_posix_idWriteCapacityScalableTarget",
      "Properties": {
        "ServiceNamespace": "dynamodb",
        "ResourceId": "table/CAStore/index/gsi_posix_id",
        "ScalableDimension": "dynamodb:index:WriteCapacityUnits",
        "PolicyName": "CAStore-index-gsi_posix_id-write-capacity-scaling-policy",
        "PolicyType": "TargetTrackingScaling",
        "TargetTrackingScalingPolicyConfiguration": {
          "PredefinedMetricSpecification": {
            "PredefinedMetricType": "DynamoDBWriteCapacityUtilization"
          },
          "ScaleOutCooldown": 60,
          "ScaleInCooldown": 60,
          "TargetValue": 70
        }
      }
    },
    "TableCAStoreIndexgsi_uuidReadCapacityScalableTarget": {
      "Type": "AWS::ApplicationAutoScaling::ScalableTarget",
      "DependsOn": "CAStore",
      "Properties": {
        "ServiceNamespace": "dynamodb",
        "ResourceId": "table/CAStore/index/gsi_uuid",
        "ScalableDimension": "dynamodb:index:ReadCapacityUnits",
        "MinCapacity": 1,
        "MaxCapacity": 10,
        "RoleARN": {
          "Fn::Sub": "arn:aws:iam::${AWS::AccountId}:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable"
        }
      }
    },
    "TableCAStoreIndexgsi_uuidReadCapacityScalingPolicy": {
      "Type": "AWS::ApplicationAutoScaling::ScalingPolicy",
      "DependsOn": "TableCAStoreIndexgsi_uuidReadCapacityScalableTarget",
      "Properties": {
        "ServiceNamespace": "dynamodb",
        "ResourceId": "table/CAStore/index/gsi_uuid",
        "ScalableDimension": "dynamodb:index:ReadCapacityUnits",
        "PolicyName": "CAStore-index-gsi_uuid-read-capacity-scaling-policy",
        "PolicyType": "TargetTrackingScaling",
        "TargetTrackingScalingPolicyConfiguration": {
          "PredefinedMetricSpecification": {
            "PredefinedMetricType": "DynamoDBReadCapacityUtilization"
          },
          "ScaleOutCooldown": 60,
          "ScaleInCooldown": 60,
          "TargetValue": 70
        }
      }
    },
    "TableCAStoreIndexgsi_uuidWriteCapacityScalableTarget": {
      "Type": "AWS::ApplicationAutoScaling::ScalableTarget",
      "DependsOn": "CAStore",
      "Properties": {
        "ServiceNamespace": "dynamodb",
        "ResourceId": "table/CAStore/index/gsi_uuid",
        "ScalableDimension": "dynamodb:index:WriteCapacityUnits",
        "MinCapacity": 1,
        "MaxCapacity": 10,
        "RoleARN": {
          "Fn::Sub": "arn:aws:iam::${AWS::AccountId}:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable"
        }
      }
    },
    "TableCAStoreIndexgsi_uuidWriteCapacityScalingPolicy": {
      "Type": "AWS::ApplicationAutoScaling::ScalingPolicy",
      "DependsOn": "TableCAStoreIndexgsi_uuidWriteCapacityScalableTarget",
      "Properties": {
        "ServiceNamespace": "dynamodb",
        "ResourceId": "table/CAStore/index/gsi_uuid",
        "ScalableDimension": "dynamodb:index:WriteCapacityUnits",
        "PolicyName": "CAStore-index-gsi_uuid-write-capacity-scaling-policy",
        "PolicyType": "TargetTrackingScaling",
        "TargetTrackingScalingPolicyConfiguration": {
          "PredefinedMetricSpecification": {
            "PredefinedMetricType": "DynamoDBWriteCapacityUtilization"
          },
          "ScaleOutCooldown": 60,
          "ScaleInCooldown": 60,
          "TargetValue": 70
        }
      }
    },
    "TableCAStoreIndexgsi_secondary_groupReadCapacityScalableTarget": {
      "Type": "AWS::ApplicationAutoScaling::ScalableTarget",
      "DependsOn": "CAStore",
      "Properties": {
        "ServiceNamespace": "dynamodb",
        "ResourceId": "table/CAStore/index/gsi_secondary_group",
        "ScalableDimension": "dynamodb:index:ReadCapacityUnits",
        "MinCapacity": 1,
        "MaxCapacity": 10,
        "RoleARN": {
          "Fn::Sub": "arn:aws:iam::${AWS::AccountId}:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable"
        }
      }
    },
    "TableCAStoreIndexgsi_secondary_groupReadCapacityScalingPolicy": {
      "Type": "AWS::ApplicationAutoScaling::ScalingPolicy",
      "DependsOn": "TableCAStoreIndexgsi_secondary_groupReadCapacityScalableTarget",
      "Properties": {
        "ServiceNamespace": "dynamodb",
        "ResourceId": "table/CAStore/index/gsi_secondary_group",
        "ScalableDimension": "dynamodb:index:ReadCapacityUnits",
        "PolicyName": "CAStore-index-gsi_secondary_group-read-capacity-scaling-policy",
        "PolicyType": "TargetTrackingScaling",
        "TargetTrackingScalingPolicyConfiguration": {
          "PredefinedMetricSpecification": {
            "PredefinedMetricType": "DynamoDBReadCapacityUtilization"
          },
          "ScaleOutCooldown": 60,
          "ScaleInCooldown": 60,
          "TargetValue": 70
        }
      }
    },
    "TableCAStoreIndexgsi_secondary_groupWriteCapacityScalableTarget": {
      "Type": "AWS::ApplicationAutoScaling::ScalableTarget",
      "DependsOn": "CAStore",
      "Properties": {
        "ServiceNamespace": "dynamodb",
        "ResourceId": "table/CAStore/index/gsi_secondary_group",
        "ScalableDimension": "dynamodb:index:WriteCapacityUnits",
        "MinCapacity": 1,
        "MaxCapacity": 10,
        "RoleARN": {
          "Fn::Sub": "arn:aws:iam::${AWS::AccountId}:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable"
        }
      }
    },
    "TableCAStoreIndexgsi_secondary_groupWriteCapacityScalingPolicy": {
      "Type": "AWS::ApplicationAutoScaling::ScalingPolicy",
      "DependsOn": "TableCAStoreIndexgsi_secondary_groupWriteCapacityScalableTarget",
      "Properties": {
        "ServiceNamespace": "dynamodb",
        "ResourceId": "table/CAStore/index/gsi_secondary_group",
        "ScalableDimension": "dynamodb:index:WriteCapacityUnits",
        "PolicyName": "CAStore-index-gsi_secondary_group-write-capacity-scaling-policy",
        "PolicyType": "TargetTrackingScaling",
        "TargetTrackingScalingPolicyConfiguration": {
          "PredefinedMetricSpecification": {
            "PredefinedMetricType": "DynamoDBWriteCapacityUtilization"
          },
          "ScaleOutCooldown": 60,
          "ScaleInCooldown": 60,
          "TargetValue": 70
        }
      }
    },
    "TableCAStoreIndexgsi_nameReadCapacityScalableTarget": {
      "Type": "AWS::ApplicationAutoScaling::ScalableTarget",
      "DependsOn": "CAStore",
      "Properties": {
        "ServiceNamespace": "dynamodb",
        "ResourceId": "table/CAStore/index/gsi_name",
        "ScalableDimension": "dynamodb:index:ReadCapacityUnits",
        "MinCapacity": 1,
        "MaxCapacity": 10,
        "RoleARN": {
          "Fn::Sub": "arn:aws:iam::${AWS::AccountId}:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable"
        }
      }
    },
    "TableCAStoreIndexgsi_nameReadCapacityScalingPolicy": {
      "Type": "AWS::ApplicationAutoScaling::ScalingPolicy",
      "DependsOn": "TableCAStoreIndexgsi_nameReadCapacityScalableTarget",
      "Properties": {
        "ServiceNamespace": "dynamodb",
        "ResourceId": "table/CAStore/index/gsi_name",
        "ScalableDimension": "dynamodb:index:ReadCapacityUnits",
        "PolicyName": "CAStore-index-gsi_name-read-capacity-scaling-policy",
        "PolicyType": "TargetTrackingScaling",
        "TargetTrackingScalingPolicyConfiguration": {
          "PredefinedMetricSpecification": {
            "PredefinedMetricType": "DynamoDBReadCapacityUtilization"
          },
          "ScaleOutCooldown": 60,
          "ScaleInCooldown": 60,
          "TargetValue": 70
        }
      }
    },
    "TableCAStoreIndexgsi_nameWriteCapacityScalableTarget": {
      "Type": "AWS::ApplicationAutoScaling::ScalableTarget",
      "DependsOn": "CAStore",
      "Properties": {
        "ServiceNamespace": "dynamodb",
        "ResourceId": "table/CAStore/index/gsi_name",
        "ScalableDimension": "dynamodb:index:WriteCapacityUnits",
        "MinCapacity": 1,
        "MaxCapacity": 10,
        "RoleARN": {
          "Fn::Sub": "arn:aws:iam::${AWS::AccountId}:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable"
        }
      }
    },
    "TableCAStoreIndexgsi_nameWriteCapacityScalingPolicy": {
      "Type": "AWS::ApplicationAutoScaling::ScalingPolicy",
      "DependsOn": "TableCAStoreIndexgsi_nameWriteCapacityScalableTarget",
      "Properties": {
        "ServiceNamespace": "dynamodb",
        "ResourceId": "table/CAStore/index/gsi_name",
        "ScalableDimension": "dynamodb:index:WriteCapacityUnits",
        "PolicyName": "CAStore-index-gsi_name-write-capacity-scaling-policy",
        "PolicyType": "TargetTrackingScaling",
        "TargetTrackingScalingPolicyConfiguration": {
          "PredefinedMetricSpecification": {
            "PredefinedMetricType": "DynamoDBWriteCapacityUtilization"
          },
          "ScaleOutCooldown": 60,
          "ScaleInCooldown": 60,
          "TargetValue": 70
        }
      }
    },
    "TableCAStoreIndexgsi_emailReadCapacityScalableTarget": {
      "Type": "AWS::ApplicationAutoScaling::ScalableTarget",
      "DependsOn": "CAStore",
      "Properties": {
        "ServiceNamespace": "dynamodb",
        "ResourceId": "table/CAStore/index/gsi_email",
        "ScalableDimension": "dynamodb:index:ReadCapacityUnits",
        "MinCapacity": 1,
        "MaxCapacity": 10,
        "RoleARN": {
          "Fn::Sub": "arn:aws:iam::${AWS::AccountId}:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable"
        }
      }
    },
    "TableCAStoreIndexgsi_emailReadCapacityScalingPolicy": {
      "Type": "AWS::ApplicationAutoScaling::ScalingPolicy",
      "DependsOn": "TableCAStoreIndexgsi_emailReadCapacityScalableTarget",
      "Properties": {
        "ServiceNamespace": "dynamodb",
        "ResourceId": "table/CAStore/index/gsi_email",
        "ScalableDimension": "dynamodb:index:ReadCapacityUnits",
        "PolicyName": "CAStore-index-gsi_email-read-capacity-scaling-policy",
        "PolicyType": "TargetTrackingScaling",
        "TargetTrackingScalingPolicyConfiguration": {
          "PredefinedMetricSpecification": {
            "PredefinedMetricType": "DynamoDBReadCapacityUtilization"
          },
          "ScaleOutCooldown": 60,
          "ScaleInCooldown": 60,
          "TargetValue": 70
        }
      }
    },
    "TableCAStoreIndexgsi_emailWriteCapacityScalableTarget": {
      "Type": "AWS::ApplicationAutoScaling::ScalableTarget",
      "DependsOn": "CAStore",
      "Properties": {
        "ServiceNamespace": "dynamodb",
        "ResourceId": "table/CAStore/index/gsi_email",
        "ScalableDimension": "dynamodb:index:WriteCapacityUnits",
        "MinCapacity": 1,
        "MaxCapacity": 10,
        "RoleARN": {
          "Fn::Sub": "arn:aws:iam::${AWS::AccountId}:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable"
        }
      }
    },
    "TableCAStoreIndexgsi_emailWriteCapacityScalingPolicy": {
      "Type": "AWS::ApplicationAutoScaling::ScalingPolicy",
      "DependsOn": "TableCAStoreIndexgsi_emailWriteCapacityScalableTarget",
      "Properties": {
        "ServiceNamespace": "dynamodb",
        "ResourceId": "table/CAStore/index/gsi_email",
        "ScalableDimension": "dynamodb:index:WriteCapacityUnits",
        "PolicyName": "CAStore-index-gsi_email-write-capacity-scaling-policy",
        "PolicyType": "TargetTrackingScaling",
        "TargetTrackingScalingPolicyConfiguration": {
          "PredefinedMetricSpecification": {
            "PredefinedMetricType": "DynamoDBWriteCapacityUtilization"
          },
          "ScaleOutCooldown": 60,
          "ScaleInCooldown": 60,
          "TargetValue": 70
        }
      }
    },
    "TableCAStoreIndexgsi_typeReadCapacityScalableTarget": {
      "Type": "AWS::ApplicationAutoScaling::ScalableTarget",
      "DependsOn": "CAStore",
      "Properties": {
        "ServiceNamespace": "dynamodb",
        "ResourceId": "table/CAStore/index/gsi_type",
        "ScalableDimension": "dynamodb:index:ReadCapacityUnits",
        "MinCapacity": 1,
        "MaxCapacity": 10,
        "RoleARN": {
          "Fn::Sub": "arn:aws:iam::${AWS::AccountId}:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable"
        }
      }
    },
    "TableCAStoreIndexgsi_typeReadCapacityScalingPolicy": {
      "Type": "AWS::ApplicationAutoScaling::ScalingPolicy",
      "DependsOn": "TableCAStoreIndexgsi_typeReadCapacityScalableTarget",
      "Properties": {
        "ServiceNamespace": "dynamodb",
        "ResourceId": "table/CAStore/index/gsi_type",
        "ScalableDimension": "dynamodb:index:ReadCapacityUnits",
        "PolicyName": "CAStore-index-gsi_type-read-capacity-scaling-policy",
        "PolicyType": "TargetTrackingScaling",
        "TargetTrackingScalingPolicyConfiguration": {
          "PredefinedMetricSpecification": {
            "PredefinedMetricType": "DynamoDBReadCapacityUtilization"
          },
          "ScaleOutCooldown": 60,
          "ScaleInCooldown": 60,
          "TargetValue": 70
        }
      }
    },
    "TableCAStoreIndexgsi_typeWriteCapacityScalableTarget": {
      "Type": "AWS::ApplicationAutoScaling::ScalableTarget",
      "DependsOn": "CAStore",
      "Properties": {
        "ServiceNamespace": "dynamodb",
        "ResourceId": "table/CAStore/index/gsi_type",
        "ScalableDimension": "dynamodb:index:WriteCapacityUnits",
        "MinCapacity": 1,
        "MaxCapacity": 10,
        "RoleARN": {
          "Fn::Sub": "arn:aws:iam::${AWS::AccountId}:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable"
        }
      }
    },
    "TableCAStoreIndexgsi_typeWriteCapacityScalingPolicy": {
      "Type": "AWS::ApplicationAutoScaling::ScalingPolicy",
      "DependsOn": "TableCAStoreIndexgsi_typeWriteCapacityScalableTarget",
      "Properties": {
        "ServiceNamespace": "dynamodb",
        "ResourceId": "table/CAStore/index/gsi_type",
        "ScalableDimension": "dynamodb:index:WriteCapacityUnits",
        "PolicyName": "CAStore-index-gsi_type-write-capacity-scaling-policy",
        "PolicyType": "TargetTrackingScaling",
        "TargetTrackingScalingPolicyConfiguration": {
          "PredefinedMetricSpecification": {
            "PredefinedMetricType": "DynamoDBWriteCapacityUtilization"
          },
          "ScaleOutCooldown": 60,
          "ScaleInCooldown": 60,
          "TargetValue": 70
        }
      }
    }
  }
}